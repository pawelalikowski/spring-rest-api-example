{
	"variables": [],
	"info": {
		"name": "API SERVER",
		"_postman_id": "1fc2dc3a-d9bb-127a-32c0-610c579e02e2",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Actuator",
			"description": "",
			"item": [
				{
					"name": "http://localhost:8080/health",
					"request": {
						"url": "http://localhost:8080/health",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "http://localhost:8080/actuator",
					"request": {
						"url": "http://localhost:8080/actuator",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Token http://localhost:8080/oauth/token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"//var auth0CookieName = 'auth0';",
							"//var auth0Cookie = postman.getResponseCookie(auth0CookieName);",
							"",
							"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");",
							"tests[\"Body contains token_type\"] = responseBody.has(\"token_type\");",
							"tests[\"Body contains expires_in\"] = responseBody.has(\"expires_in\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData.access_token);"
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/oauth/token",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic YWNtZTphY21lc2VjcmV0",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"description": ""
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text",
							"enabled": true
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "OPTIONS Token http://localhost:8080/oauth/token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/oauth/token",
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text",
							"enabled": true
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_id",
							"value": "acme",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_secret",
							"value": "acmesecret",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": "This request is for testing that OPTIONS request is passed without authentication."
			},
			"response": []
		},
		{
			"name": "GET Me http://localhost:8080/me",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Username is valid\"] = jsonData.username === postman.getEnvironmentVariable(\"username\");",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/user",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": "Returns current logged in user details"
			},
			"response": []
		},
		{
			"name": "GET Users http://localhost:8080/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/users",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": "Returns list of all users"
			},
			"response": []
		},
		{
			"name": "GET User http://localhost:8080/users/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Username is valid\"] = jsonData.username === postman.getEnvironmentVariable(\"username\");",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/users/1",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": "Returns user with id: 1"
			},
			"response": []
		},
		{
			"name": "Create User http://localhost:8080/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Username is valid\"] = jsonData.username === \"Chuck\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/users",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Chuck\",\n    \"password\": \"Chuck\",\n    \"email\": \"chuck@communications.com\"\n }"
				},
				"description": "Creates new user"
			},
			"response": []
		},
		{
			"name": "Update User http://localhost:8080/users/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Username is valid\"] = jsonData.username === \"Chuck\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/users/1",
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Chuck\",\n    \"password\": \"Chuck\",\n    \"email\": \"chuck@communications.com\"\n }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Patch User http://localhost:8080/users/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Username is valid\"] = jsonData.username === \"Chuck2\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/users/2",
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"Chuck2\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET ChuckNorris Facts http://localhost:8080/chuckNorris",
			"request": {
				"url": "http://localhost:8080/chuckNorris",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET ChuckNorris Fact http://localhost:8080/chuckNorris/1",
			"request": {
				"url": "http://localhost:8080/chuckNorris/1",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create ChuckNorris Fact http://localhost:8080/chuckNorris",
			"request": {
				"url": "http://localhost:8080/chuckNorris",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fact\": \"Whiteboards are white because Chuck Norris scared them that way.\",\n    \"factNo\": \"102\"\n }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Update ChuckNorris Fact http://localhost:8080/chuckNorris/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"fact is updated\"] = jsonData.fact === \"Some fact about Chuck Norris\";",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://localhost:8080/chuckNorris/1",
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"fact\": \"Some fact about Chuck Norris\",\n    \"factNo\": \"1\"\n }"
				},
				"description": ""
			},
			"response": []
		}
	]
}